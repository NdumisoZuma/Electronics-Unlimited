@model Electronica.Models.ExpandedUserDTO

@{
    ViewBag.Title = "User";
    ViewBag.TitleSmall = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="row">
    <div class="col-md-6">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Edit  User</h3>
                @using (Html.BeginForm())
                {
                    <div class="box-body">

                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Edit User</h4>
                            @Html.ValidationSummary(true,
                           "",
                           new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName,
                               htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DisplayFor(model => model.UserName,
                                   new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "",
                                   new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email,
                               htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email,
                                   new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email,
                                   "",
                                   new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password,
                               htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(model => model.Password,
                                   new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password,
                                   "",
                                   new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LockoutEndDateUtc,
                               htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DisplayFor(model => model.LockoutEndDateUtc,
                                   new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>

                        <div class="box-footer">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-success" />
                                @Html.ActionLink("Edit Roles", "EditRoles",
                               new { UserName = Model.UserName },
                               new { @class = "btn btn-warning" })
                                @Html.ActionLink("Back to List",
                               "Index",
                               null,
                               new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>