@model PagedList.IPagedList<Electronica.Models.ExpandedUserDTO>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css">
@{
    ViewBag.Title = "Users";
    ViewBag.TitleSmall = "All";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<br />


<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    @Html.ActionLink("All Roles", "ViewAllRoles", null, new { @class = "btn btn-success" })
    @Html.ActionLink("Home", "../", "Home", null, new { @class = "btn btn-warning" })
</p>
<br />
@using (Html.BeginForm("Index", "Admin", FormMethod.Get))
{


    <div class="col-sm-4">
        <div class="input-group add-on">
            @Html.TextBox("searchStringUserNameOrEmail", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search by user by username or email..." })
            <div class="input-group-btn">
                <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
            </div>
        </div>
    </div>


}

<br />
<div class="box-body">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Email
                </th>
                <th>
                    Locked Out
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LockoutEndDateUTc)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditUser", new { UserName = item.UserName }, new { @class = "btn btn-primary" }) |
                        @if ((item.UserName.ToLower() != this.User.Identity.Name.ToLower()))
                        {
                            @Html.ActionLink("Delete", "DeleteUser", new { UserName = item.UserName },
                            new { onclick = "return confirm('Are you sure you wish to delete this user?');" })
                        }
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>
<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model,
        page => Url.Action("Index",
        new
        {
            page,
            searchStringUserNameOrEmail = ViewBag.searchStringUserNameOrEmail,
            currentFilter = ViewBag.CurrentFilter
        }))
    <hr />
